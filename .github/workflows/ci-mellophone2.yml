# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: ci-mellophone2

# Triggers the workflow on push or pull request events but only for the master branch
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:

    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Set up JDK 17 enviroment on ubuntu-latest...
      uses: actions/setup-java@v2
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Build mellophone2 with maven
      run: mvn clean package      
    - name: Extract pom project version
      run: echo ::set-output name=version::$(mvn -q -Dexec.executable=echo -Dexec.args='${project.version}' --non-recursive exec:exec)
      id: projectversiongroup      
    #- name: Copy production artifacts
    #  uses: actions/upload-artifact@v2
    #  with:
    #   name: mellophone2-${{ steps.projectversiongroup.outputs.version }}
    #   path: |
    #     target/mellophone2-*.jar
    #     target/classes/application.yml => application.yml
    #     target/classes/config/config.xml => config.xml
    #         name: Create zip of dist for downloading to ftp
    - uses: papeloto/action-zip@v1
      with:
       files: 
         target/mellophone2-${{ steps.projectversiongroup.outputs.version }}.jar
         target/classes/application.yml
         target/classes/config/config.xml
       dest: ./artifact_for_ftp/mellophone2-${{ steps.projectversiongroup.outputs.version }}.zip     
    - name: Archive production artifacts
      uses: actions/upload-artifact@v2
      with:
          name: mellophone2-${{ steps.projectversiongroup.outputs.version }}
          path: ./artifact_for_ftp/mellophone2-${{ steps.projectversiongroup.outputs.version }}.zip
    - name: ðŸ“‚ Upload artifact to ftp
      uses: SamKirkland/FTP-Deploy-Action@4.0.0
      with:
          server: share.curs.ru
          username: ${{ secrets.FTP_CURS_LOGIN }}
          password: ${{ secrets.FTP_CURS_PWD }}
          server-dir: development/curs-mellophone2/
          local-dir: ./artifact_for_ftp/          
       


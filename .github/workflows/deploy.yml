# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Deploy mellophone2

on:
  workflow_call:
    inputs:
      VUH_VERSION: { required: true, type: string }
    secrets:
      FTP_CURS_LOGIN:
        required: true
      FTP_CURS_PWD:
        required: true
      DOCKER_USERNAME:
        required: true
      DOCKER_PASSWORD:
        required: true

jobs:
  build:
    name: Deploy mellophone2
    runs-on: ubuntu-latest
    environment: deployenv
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Download vuh
        run: |
          curl https://raw.githubusercontent.com/Greewil/version-update-helper/${{ inputs.VUH_VERSION }}/vuh.sh -O -J -L
          chmod +x vuh.sh
      - name: Get release version
        id: artifact_version
        run: |
          cur_version=$(./vuh.sh lv -q)
          echo "release version: $cur_version" 
          echo "VERSION=$cur_version" >> "$GITHUB_OUTPUT"
      - name: Set up JDK 17 enviroment on ubuntu-latest...
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Build mellophone2 with maven
        run: mvn clean package
      - uses: papeloto/action-zip@v1
        with:
          files:
            target/mellophone2-${{ steps.artifact_version.outputs.VERSION }}.jar
            target/classes/application.yml
            target/classes/config/config.xml
          dest: ./artifact_for_ftp/mellophone2-${{ steps.artifact_version.outputs.VERSION }}.zip
      - name: Archive production artifacts
        uses: actions/upload-artifact@v4
        with:
          name: mellophone2-${{ steps.artifact_version.outputs.VERSION }}
          path: ./artifact_for_ftp/mellophone2-${{ steps.artifact_version.outputs.VERSION }}.zip

      - name: ðŸ“‚ Upload artifact to ftp
        uses: SamKirkland/FTP-Deploy-Action@4.0.0
        with:
          server: share.curs.ru
          username: ${{ secrets.FTP_CURS_LOGIN }}
          password: ${{ secrets.FTP_CURS_PWD }}
          server-dir: development/curs-mellophone2/
          local-dir: ./artifact_for_ftp/

      - name: Login to container registry (to Docker Hub)
        if: success() && github.ref == 'refs/heads/main'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and push
        if: success() && github.ref == 'refs/heads/main'
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: curs/mellophone2:latest , curs/mellophone2:${{ steps.artifact_version.outputs.VERSION }}
          context: .

      - name: Build documentation
        run: |
          ./_builddoc.sh
      - name: Run deploy doc sight
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          branch: gh-pages
          folder: target-doc
